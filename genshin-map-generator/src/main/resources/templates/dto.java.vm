package site.yuanshen.data.dto;

import io.swagger.v3.oas.annotations.media.Schema;
import lombok.*;
import com.alibaba.fastjson.annotation.JSONField;
import site.yuanshen.common.core.utils.BeanUtils;
import site.yuanshen.data.entity.${entity};
import site.yuanshen.data.vo.${entity}Vo;


/**
 * $!{table.comment}
 *
 * @author ${author}
 * @since ${date}
 */
@Data
@ToString
@NoArgsConstructor
@AllArgsConstructor
@With
@EqualsAndHashCode
@Schema(name = "${entity}数据封装", description = "$!{table.comment}数据封装")
public class ${entity}Dto {
#if(${entitySerialVersionUID})

private static final long serialVersionUID=1L;
#end
## ----------  BEGIN 字段循环遍历  ----------
#foreach($field in ${table.fields})

    #if(${field.keyFlag})
        #set($keyPropertyName=${field.propertyName})
    #end
    #if("$!field.comment" != "")
    /**
     * ${field.comment}
     */
    @Schema(name = "${field.comment}")
    #end
private ${field.propertyType} ${field.propertyName};
#end
## ----------  END 字段循环遍历  ----------

#if(!${entityLombokModel})
    #foreach($field in ${table.fields})
        #if(${field.propertyType.equals("boolean")})
            #set($getprefix="is")
        #else
            #set($getprefix="get")
        #end

    public ${field.propertyType} ${getprefix}${field.capitalName}(){
            return ${field.propertyName};
            }

        #if(${chainModel})
        public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}){
        #else
        public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
        #end
            this.${field.propertyName} = ${field.propertyName};
        #if(${chainModel})
                return this;
        #end
            }
    #end
    ## --foreach end---
#end
## --end of #if(!${entityLombokModel})--

#if(${entityColumnConstant})
    #foreach($field in ${table.fields})
    public static final String ${field.name.toUpperCase()} ="${field.name}" ;

    #end
#end
#if(${activeRecord})
@Override
public Serializable pkVal(){
    #if(${keyPropertyName})
            return this.${keyPropertyName};
    #else
            return null;
    #end
        }

#end
#if(!${entityLombokModel})
@Override
public String toString() {
        return "${entity}{" +
    #foreach($field in ${table.fields})
        #if($!{foreach.index}==0)
                "${field.propertyName}=" + ${field.propertyName} +
        #else
                ", ${field.propertyName}=" + ${field.propertyName} +
        #end
    #end
        "}";
        }
#end

    public ${entity}Dto(${entity} ${entity.substring(0,1).toLowerCase()}${entity.substring(1)}) {
        BeanUtils.copyProperties(${entity.substring(0,1).toLowerCase()}${entity.substring(1)}, this);
    }

    public ${entity}Dto(${entity}Vo ${entity.substring(0,1).toLowerCase()}${entity.substring(1)}Vo) {
        BeanUtils.copyProperties(${entity.substring(0,1).toLowerCase()}${entity.substring(1)}Vo, this);
    }

    @JSONField(serialize = false)
    public ${entity} getEntity() {
        return BeanUtils.copyProperties(this, ${entity}.class);
    }

    @JSONField(serialize = false)
    public ${entity}Vo getVo() {
        return BeanUtils.copyProperties(this, ${entity}Vo.class);
    }


}
